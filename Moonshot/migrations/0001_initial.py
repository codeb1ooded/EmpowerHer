# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-19 05:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ANSWER',
            fields=[
                ('ANSWER_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('ANSWER', models.CharField(max_length=100000)),
                ('TIMESTAMP', models.DateField(blank=True, null=True)),
                ('NUM_UPVOTES', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EVENT',
            fields=[
                ('EVENT_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=100)),
                ('DESCRIPTION', models.CharField(max_length=1000)),
                ('REGISTRATION_OPEN_DATE', models.DateField(blank=True, null=True)),
                ('REGISTRATION_CLOSE_DATE', models.DateField(blank=True, null=True)),
                ('EVENT_DATE_1', models.DateField(blank=True, null=True)),
                ('EVENT_DATE_2', models.DateField(blank=True, null=True)),
                ('DETAILS', models.CharField(max_length=50000)),
                ('WEBSITE', models.CharField(max_length=200)),
                ('LOCATION', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EXPERIENCE',
            fields=[
                ('EXPERIENCE_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('EXPERIENCE', models.CharField(max_length=100000)),
                ('TIMESTAMP', models.DateField(blank=True, null=True)),
                ('NUM_UPVOTES', models.IntegerField(default=0)),
                ('EVENT_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT')),
            ],
        ),
        migrations.CreateModel(
            name='GOING_EVENT',
            fields=[
                ('GOING_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('EVENT_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT')),
            ],
        ),
        migrations.CreateModel(
            name='GUIDE_AVAILABLE',
            fields=[
                ('GUIDE_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('EVENT_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT')),
            ],
        ),
        migrations.CreateModel(
            name='LIVE_CHAT',
            fields=[
                ('CHAT_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('TIMESTAMP', models.DateField(blank=True, null=True)),
                ('MESSAGE', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='QUESTION',
            fields=[
                ('QUESTION_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('QUSETION', models.CharField(max_length=1000)),
                ('DESCRIPTION', models.CharField(max_length=1000)),
                ('TIMESTAMP', models.DateField(blank=True, null=True)),
                ('EVENT_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT')),
            ],
        ),
        migrations.CreateModel(
            name='TAG',
            fields=[
                ('TAG_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='TAGGED_EVENT',
            fields=[
                ('RELATION_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('EVENT_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT')),
                ('TAG_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.TAG')),
            ],
        ),
        migrations.CreateModel(
            name='UPVOTE_ANSWER',
            fields=[
                ('UPVOTE_ANSWER_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('ANSWER_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.ANSWER')),
            ],
        ),
        migrations.CreateModel(
            name='UPVOTE_EXPERIENCE',
            fields=[
                ('UPVOTE_EXPERIENCE_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('EXPERIENCE_KEY', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EXPERIENCE')),
            ],
        ),
        migrations.CreateModel(
            name='UPVOTE_GUIDE',
            fields=[
                ('UPVOTE_GUIDE_ID', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='USER',
            fields=[
                ('USER_REF', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='USER', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('NAME', models.CharField(max_length=100)),
                ('PROFILE_LINK', models.CharField(max_length=100)),
                ('EXPERIENCE_UPVOTE', models.IntegerField()),
                ('ANSWER_UPVOTE', models.IntegerField()),
                ('GUIDE_UPVOTE', models.IntegerField()),
                ('NUM_QUESTION_ASKED', models.IntegerField()),
                ('BADGE1', models.BooleanField(default=False)),
                ('BADGE2', models.BooleanField(default=False)),
                ('BADGE3', models.BooleanField(default=False)),
                ('BADGE4', models.BooleanField(default=False)),
                ('BADGE5', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='upvote_guide',
            name='GUIDE_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guide', to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='upvote_guide',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guided', to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='upvote_experience',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='upvote_answer',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='question',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='live_chat',
            name='RECEIVER_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='live_chat',
            name='SENDER_KEY',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='guide_available',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='going_event',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='experience',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='event',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
        migrations.AddField(
            model_name='answer',
            name='EVENT_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.EVENT'),
        ),
        migrations.AddField(
            model_name='answer',
            name='QUESTION_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.QUESTION'),
        ),
        migrations.AddField(
            model_name='answer',
            name='USER_KEY',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Moonshot.USER'),
        ),
    ]
